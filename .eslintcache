[{"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/index.js":"1","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/reportWebVitals.js":"2","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/App.js":"3","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Actors/Actors.js":"4","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Details/Details.js":"5","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Home/PeopleRow.js":"6","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Home/TvRow.js":"7","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Home/MovieRow.js":"8","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/showsDetailPage/ShowsDetailPage.js":"9","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Details/CastRow.js":"10","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/showsDetailPage/ShowsDetailsRow.js":"11","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Actors/ActorRow.js":"12"},{"size":593,"mtime":1614844907055,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1614844907055,"results":"15","hashOfConfig":"14"},{"size":15637,"mtime":1614844907052,"results":"16","hashOfConfig":"14"},{"size":1684,"mtime":1614844907051,"results":"17","hashOfConfig":"14"},{"size":1470,"mtime":1614844907053,"results":"18","hashOfConfig":"14"},{"size":1751,"mtime":1614844907054,"results":"19","hashOfConfig":"14"},{"size":1815,"mtime":1614844907054,"results":"20","hashOfConfig":"14"},{"size":2857,"mtime":1615032915809,"results":"21","hashOfConfig":"14"},{"size":1723,"mtime":1614844907056,"results":"22","hashOfConfig":"14"},{"size":1605,"mtime":1614844907053,"results":"23","hashOfConfig":"14"},{"size":1111,"mtime":1614844907056,"results":"24","hashOfConfig":"14"},{"size":1265,"mtime":1614844907051,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"rv9reb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/index.js",[],["52","53"],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/reportWebVitals.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/App.js",["54","55","56"],"/* eslint eqeqeq: 0 */\nimport './App.css';\nimport './Form.css'\nimport $ from 'jquery';\nimport { React, useState, useEffect } from 'react';\nimport MovieRow from './Home/MovieRow';\nimport PeopleRow from './Home/PeopleRow'\nimport TvRow from './Home/TvRow'\nimport Details from './Details/Details';\nimport Actors from './Actors/Actors';\nimport ShowsDetailPage from './showsDetailPage/ShowsDetailPage'\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n// import './dropdown.css'\n\nconst App = () => {\n  const [movieList, setMovieList] = useState([])\n  const [queryInput, setQuery] = useState('')\n  const [suggestedNames, setNames] = useState([])\n  const [suggestion, hideSuggestion] = useState(false)\n\n  useEffect(() => {\n    console.log(\"Hello\")\n    if(queryInput.length >= 4) {\n      checkInput()\n      hideSuggestion(true)\n      // console.log(queryInput)\n      // console.log(queryInput.length)\n    }\n  }, [queryInput]);\n\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       movieList: [],\n//       query: '',\n//       suggestedNames: []\n//     }\n//   }\n\n\n  const trendingMovies = async () => {\n      var category = $('select.category').val();\n      if (category == 'tv shows') {\n        category = 'tv'\n      } else if (category == 'movies') {\n        category = 'movie'  \n      } else if (category == 'people') {\n        category = 'person'\n      }\n      console.log(category)\n      const url = \"https://api.themoviedb.org/3/trending/\"+ category + \"/day?api_key=21d7e7d170fcdc61c66d3c6d8d994196\"\n      const res = await axios.get(url)\n      const results = res.data.results;\n      console.log(url)\n      console.log(results)\n      var movies = []\n\n      if (category == 'person') {\n        results.forEach((movie) => {\n          console.log(movie.profile_path)\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.profile_path\n          // console.log(movie.name)\n          movies.push(<PeopleRow key={movie.id} movie={movie}/>)\n        });\n      } else {\n      results.forEach((movie) => {\n        movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n        // console.log(movie.name)\n        movies.push(<MovieRow key={movie.id} movie={movie}/>)\n      });\n      // this.setState({movieList: movies})\n    }\n    setMovieList(movies)\n  }\n\n  function searchButton() {\n    hideSuggestion(false)\n    var category = $('select.category').val();\n    console.log(category)\n    // console.log(\"heloooooo\")\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    if (category == 'all') {\n      console.log(\"seachring for everything\")\n      const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + queryInput + \"&page=1&include_adult=false\"\n      $.ajax({\n        url: url,\n        success: (searchResults) => {\n          console.log(\"Fetched data successfullu\")\n          console.log(searchResults['results'])\n          const results = searchResults['results']\n\n          var movies = []\n\n          results.forEach((movie) => {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n            // console.log(movie.name)\n            movies.push(<MovieRow key={movie.id} movie={movie}/>)\n          });\n          // this.setState({movieList: movies})\n          setMovieList(movies)\n        },\n        error: (xhr, status, err) => {\n          console.error(\"Failed to fetch data\")\n        }\n      })\n    } else if (category == 'movies') {\n      console.log(\"seachring movies\")\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + queryInput + \"&page=1\";    \n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<MovieRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'people') {\n        console.log(\"seaching people\")\n        var inputValue = queryInput.split(\" \")\n        var newQuery = ''\n        for (let i=0; i<inputValue.length; i++) {\n          newQuery += inputValue[i]\n          if (i != inputValue.length) { \n            newQuery += '%20'\n          }\n        }\n        console.log(inputValue)\n        console.log(inputValue)\n        const url = 'https://api.themoviedb.org/3/search/person?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query='+newQuery+'&page=1&include_adult=false'\n        console.log(url)\n        // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              console.log(movie.profile_path)\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.profile_path\n              // console.log(movie.name)\n              movies.push(<PeopleRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'tv shows') {\n        const url = 'https://api.themoviedb.org/3/search/tv?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&page=1&query='+queryInput+'&include_adult=false';\n        console.log(\"seachring tv shows\")\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<TvRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      }\n  }\n  function searchButtonEnter(e){\n\n    e.preventDefault();\n    hideSuggestion(false)\n    var category = $('select.category').val();\n    console.log(category)\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + queryInput + \"&page=1&include_adult=false\"\n\n    if (category == 'all') {\n      $.ajax({\n        url: url,\n        success: (searchResults) => {\n          console.log(\"Fetched data successfullu\")\n          console.log(searchResults['results'])\n          const results = searchResults['results']\n\n          var movies = []\n\n          results.forEach((movie) => {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n            // console.log(movie.name)\n            movies.push(<MovieRow key={movie.id} movie={movie}/>)\n          });\n          // this.setState({movieList: movies})\n          setMovieList(movies)\n        },\n        error: (xhr, status, err) => {\n          console.error(\"Failed to fetch data\")\n        }\n      })\n    } else if (category == 'movies') {\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + queryInput + \"&page=1\";    \n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n            \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<MovieRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'people') {\n        console.log(\"searching people\")\n        var inputValue = queryInput.split(\" \")\n        var newQuery = ''\n        for (let i=0; i<inputValue.length; i++) {\n          newQuery += inputValue[i]\n          if (i != inputValue.length - 1) { \n            newQuery += '%20'\n          }\n        }\n        console.log(inputValue)\n        console.log(inputValue)\n        const url = 'https://api.themoviedb.org/3/search/person?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query='+newQuery+'&page=1&include_adult=false'\n        console.log(url)\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<PeopleRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'tv shows') {\n        const url = 'https://api.themoviedb.org/3/search/tv?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&page=1&query='+queryInput+'&include_adult=false';\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<TvRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      }\n  }\n\n\n  function handleInputChange(event) {\n    event.preventDefault();\n    var value = event.target.value;\n    // console.log(value);\n    // this.setState({query: value})\n    setQuery(value)\n  }\n\n  function hideSugg() {\n    hideSuggestion(!suggestion);\n  }\n\n  function checkInput () {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    // console.log(query)\n    \n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + queryInput + \"&page=1&include_adult=false\"\n\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.profile_path\n          // console.log(movie.name)\n          if (movie.name == null) {\n            // console.log(movie.id)\n            movie.name = movie.title\n            // movies.push(movie.title)\n            // console.log(movie.name)\n          }\n          // } else {\n          //   movies.push(movie.name)\n          //   console.log(movie.name)\n          // // }\n          movies.push(movie)\n        });\n        // this.setState({suggestedNames: movies})\n        setNames(movies)\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n  \n    return (\n        <div className=\"\">\n          <Route exact path={['/Home', '/']}>\n          <div className='jumbotron'>\n            <h1 className=\"display-4\">Movie Search DB</h1>\n          \n\n            <p className=\"lead\">\n                Make searches, filter by category using the drop down<br></br>\n                Or make a search and it will default to All<br></br>\n                Click the Trending button to find latest movies, tv shows or actors<br></br>\n                Filter also applies to the Trending button\n            </p>\n\n            <form onSubmit={searchButtonEnter} >\n            <input className='form-control' onChange={e => (setQuery(e.target.value))} id='searchBox' type=\"text\" placeholder=\"Search..\"  onChange={handleInputChange}/>\n            </form>\n            <button className='homeButtons btn btn-primary' id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" onClick={searchButton} type=\"submit\">Search</button>\n            <button className='homeButtons btn btn-primary' data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" onClick={trendingMovies} type=\"submit\">Trending</button>\n            <select className=\"category homeButtons btn btn-secondary dropdown-toggle\" aria-labelledby=\"dropdownMenuButton\">\n            <option value=\"all\">All</option>\n            <option value=\"movies\"> Movies</option>\n            <option value=\"people\"> People</option>\n            <option value=\"tv shows\"> TV Shows</option>\n          </select>\n        </div>\n          <div className=\"container\">\n          {\n            suggestedNames.map(match => {\n              \n              return (\n                <Link\n                to={{\n                    pathname: \"/Details\",\n                    id: match.id // your data array of objects\n                }}\n                >\n                <button style={{display: suggestion ? 'block' : 'none'}} type='button'>{match.name}</button>\n                </Link>\n                )\n            }).sort()\n          }\n          </div>\n          {movieList ? (\n            <div>\n              {movieList}\n            </div>\n            ) : (\n              <p>No Movies Found</p>\n            )\n            }\n\n          </Route>\n          <Route path='/Details' component={Details}/>\n          <Route path='/Actors' component={Actors}/>\n          <Route path='/ShowsDetail' component={ShowsDetailPage}/>\n        </div>\n        \n    );\n}\n\nexport default App;\n","/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Actors/Actors.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Details/Details.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Home/PeopleRow.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Home/TvRow.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Home/MovieRow.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/showsDetailPage/ShowsDetailPage.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Details/CastRow.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/showsDetailPage/ShowsDetailsRow.js",[],"/Users/SKN19/OneDrive - Sky/dev/movies-database-api-frontend/src/Actors/ActorRow.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":30,"column":6,"nodeType":"63","endLine":30,"endColumn":18,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":329,"column":12,"nodeType":"67","messageId":"68","endLine":329,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":390,"column":139,"nodeType":"71","endLine":390,"endColumn":167},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkInput'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-unused-vars","'hideSugg' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [checkInput, queryInput]",{"range":"77","text":"78"},[928,940],"[checkInput, queryInput]"]