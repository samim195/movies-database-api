[{"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/index.js":"1","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/App.js":"2","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/reportWebVitals.js":"3","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailPage.js":"4","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailsRow.js":"5","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/PeopleRow.js":"6","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/TvRow.js":"7","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/MovieRow.js":"8","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/Actors.js":"9","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/ActorRow.js":"10","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/Details.js":"11","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/CastRow.js":"12","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailPage.js":"13","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailsRow.js":"14"},{"size":593,"mtime":1609798532875,"results":"15","hashOfConfig":"16"},{"size":9345,"mtime":1609877098897,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609764715753,"results":"18","hashOfConfig":"16"},{"size":1852,"mtime":1609873643639,"results":"19","hashOfConfig":"16"},{"size":1219,"mtime":1609873704816,"results":"20","hashOfConfig":"16"},{"size":1631,"mtime":1609870453560,"results":"21","hashOfConfig":"16"},{"size":1685,"mtime":1609870446148,"results":"22","hashOfConfig":"16"},{"size":1934,"mtime":1609915631470,"results":"23","hashOfConfig":"16"},{"size":1788,"mtime":1609873132691,"results":"24","hashOfConfig":"16"},{"size":1276,"mtime":1609873191638,"results":"25","hashOfConfig":"16"},{"size":1508,"mtime":1609876788261,"results":"26","hashOfConfig":"16"},{"size":1894,"mtime":1609876833392,"results":"27","hashOfConfig":"16"},{"size":1852,"mtime":1609873643639,"results":"28","hashOfConfig":"16"},{"size":1219,"mtime":1609873704816,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1recvfo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/index.js",[],["64","65"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/App.js",["66","67"],"import './App.css';\nimport './Form.css'\nimport $ from 'jquery';\nimport { React, Component } from 'react';\nimport MovieRow from './Home/MovieRow';\nimport PeopleRow from './Home/PeopleRow'\nimport TvRow from './Home/TvRow'\nimport Details from './Details/Details';\nimport Actors from './Actors/Actors';\nimport ShowsDetailPage from './showsDetailPage/ShowsDetailPage'\nimport { Route, Switch, Link } from 'react-router-dom';\n// import './dropdown.css'\nvar Select = require('react-select');\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"initializer\")\n\n    this.state = {\n      movieList: [],\n      query: '',\n      suggestedNames: []\n    }\n  }\n\n  searchButton = () => {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n          // console.log(movie.name)\n          movies.push(<MovieRow key={movie.id} movie={movie}/>)\n        });\n        this.setState({movieList: movies})\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n  searchButtonEnter = (e) => {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    e.preventDefault();\n    var query = $('#searchBox').val()\n    console.log(query)\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n          // console.log(movie.name)\n          movies.push(<MovieRow key={movie.id} movie={movie}/>)\n        });\n        this.setState({movieList: movies})\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n\n  searchButtonMovies = () => {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    // const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n          // console.log(movie.name)\n          movies.push(<MovieRow key={movie.id} movie={movie}/>)\n        });\n        this.setState({movieList: movies})\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n\n  searchButtonTvShows = () => {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = 'https://api.themoviedb.org/3/search/tv?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&page=1&query='+query+'&include_adult=false';\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n          // console.log(movie.name)\n          movies.push(<TvRow key={movie.id} movie={movie}/>)\n        });\n        this.setState({movieList: movies})\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n\n  searchButtonPeople = () => {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    const url = 'https://api.themoviedb.org/3/search/person?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query='+query+'&page=1&include_adult=false'\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n          // console.log(movie.name)\n          movies.push(<PeopleRow key={movie.id} movie={movie}/>)\n        });\n        this.setState({movieList: movies})\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    var value = event.target.value;\n    console.log(value)\n    this.setState({query: value})\n    if(this.state.query.length >= 4) {\n      this.checkInput()\n      console.log(this.state.query)\n    }\n  }\n\n  checkInput = () => {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.profile_path\n          // console.log(movie.name)\n          if (movie.name == null) {\n            console.log(movie.id)\n            movie.name = movie.title\n            // movies.push(movie.title)\n            console.log(movie.name)\n          }\n          // } else {\n          //   movies.push(movie.name)\n          //   console.log(movie.name)\n          // // }\n          movies.push(movie)\n        });\n        this.setState({suggestedNames: movies})\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n  \n  render() {\n    return (\n        <div className='parentDiv'>\n          <Route exact path={['/Home', '/']}>\n            <header>\n            <form onSubmit={this.searchButtonEnter} >\n            <input className='Search' id='searchBox' type=\"text\" placeholder=\"Search..\" ref={input => this.search = input} onChange={this.handleInputChange}/>\n            </form>\n            <div className='childDiv'>\n            <button className='homeButtons' onClick={this.searchButton} type=\"submit\">Search All</button>\n            <button className='homeButtons' onClick={this.searchButtonMovies} type=\"submit\">Movies</button>\n            <button className='homeButtons' onClick={this.searchButtonPeople} type=\"submit\">People</button>\n            <button className='homeButtons' onClick={this.searchButtonTvShows} type=\"submit\">TV Shows</button>\n            </div>\n            </header>\n            {\n              this.state.suggestedNames.map(match => {\n                return (\n                  <div className=\"Matches\">\n                  <Link\n                  to={{\n                      pathname: \"/Details\",\n                      id: match.id // your data array of objects\n                  }}\n                  >\n                  <button type='button'>{match.name}</button>\n                  </Link>\n                  </div>\n                  )\n              })\n            }\n            {this.state.movieList}\n          </Route>\n          <Route path='/Details' component={Details}/>\n          <Route path='/Actors' component={Actors}/>\n          <Route path='/ShowsDetail' component={ShowsDetailPage}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/reportWebVitals.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailPage.js",["68","69"],"import Link from 'react-router-dom';\nimport { React, Component } from 'react';\nimport $ from 'jquery';\nimport ShowsDetailsRow from './ShowsDetailsRow';\nimport { withRouter } from 'react-router-dom';\n\nclass ShowsDetailPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {showsDetailList: []}\n    }\n\n    componentDidMount = () => {\n        console.log(this.props.location.id)\n        const id = this.props.location.id;\n        var url = 'https://api.themoviedb.org/3/movie/' + id + '?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US'\n        $.ajax ({\n            url: url,\n            success: (searchResults) => {\n                console.log(\"Successfully called Showdeatils page API\");\n                console.log(searchResults);\n                console.log(typeof(searchResults))\n                var showsArray = []\n                // searchResults[0].forEach((shows) => {\n                //     showsArray.push(shows)\n                //     console.log(shows)\n                // });\n                // Object.keys(searchResults).forEach(function(key) {\n                //     // console.log(key, searchResults[key]);\n                //     showsArray[key] = searchResults[key]\n                // });\n                searchResults.poster_src = \"https://image.tmdb.org/t/p/w185\" + searchResults.poster_path\n                showsArray.push(<ShowsDetailsRow key={searchResults.id} shows={searchResults}/>)\n\n                this.setState({showsDetailList: showsArray})\n            },\n            error: (xhr, status, err) => {\n                console.log(err)\n            }\n        });\n    }\n    \n\n    render() {\n        return (\n            <div>\n            <h1>Show/Movie Details Page</h1>\n                {this.state.showsDetailList}\n            </div>\n        )\n    }\n}\n\nexport default ShowsDetailPage;","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailsRow.js",["70"],"import React from 'react';\nimport '../Home/MovieRow.css';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass ShowsDetailsRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {showDiv: false}\n    }\n    render() {\n        return <table key={this.props.shows.id}>\n        <tbody>\n        <tr>\n        <td>\n        \n        </td>\n        <td>\n            <h3>Title: {this.props.shows.original_title}</h3>\n\n            <div>\n            <p><b>Summary</b>: {this.props.shows.overview}</p>\n            </div>\n            <div>\n            <img src={this.props.shows.poster_src} alt=\"prof pic\" width=\"300\" height=\"300\"/>\n            </div>\n            <div id={this.props.shows.id}>\n                <p><b>popularity</b>: {this.props.shows.popularity}</p>\n                <p><b>Release Date </b> {this.props.shows.release_date}/10</p>\n                <p><b>Revenue </b> {this.props.shows.revenue}/10</p>\n                <a href={this.props.shows.homepage}>{this.props.shows.homepage}</a>\n                <h4>{this.props.shows.tagline}</h4>\n            </div>\n        </td>\n        </tr>\n        </tbody>\n        </table>\n    }\n}\n\n\nexport default withRouter(ShowsDetailsRow);","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/PeopleRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/TvRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/MovieRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/Actors.js",["71","72"],"import Link from 'react-router-dom';\nimport { React, Component } from 'react';\nimport $ from 'jquery';\nimport { withRouter } from 'react-router-dom';\nimport ActorRow from './ActorRow';\n\nclass Actors extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {movieList: []}\n    };\n    componentDidMount = () => {\n        console.log(this.props.location.id)\n        const name = this.props.location.id;\n        var url = 'https://api.themoviedb.org/3/search/person?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query='+name+'&page=1&include_adult=false';\n        $.ajax ({\n            url: url,\n            success: (searchResults) => {\n                console.log(\"Successful call to the API\");\n                const results = searchResults.results;\n                console.log(results);\n                // console.log(results.known_for_department)\n                var moviesArray = []\n                results.forEach((actor)=> {\n                        let moviesActor = actor.known_for;\n                        moviesActor.forEach((movies) => {\n                        movies.poster_src = \"https://image.tmdb.org/t/p/w185\" + movies.poster_path\n                        console.log(movies)\n                        moviesArray.push(movies[0])\n                        moviesArray.push(<ActorRow key={movies.id} movies={movies}/>)\n                    })\n                    this.setState({movieList: moviesArray})\n                })\n            },\n            error: (xhr, status, err) => {\n                console.log(err);\n                }\n            });\n        }\n    render() {\n        return (\n            <div>\n            <h1>Actors Page</h1>\n                {this.state.movieList}\n            </div>\n        )\n    }\n}\n\nexport default Actors;\n","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/ActorRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/Details.js",["73"],"import Link from 'react-router-dom';\nimport { React, Component } from 'react';\nimport $ from 'jquery';\nimport { withRouter } from 'react-router-dom';\nimport  CastRow  from './CastRow.js';\n\nclass Details extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {castList: []}\n    }\n    componentDidMount = () => {\n        console.log(\"---------------------------\")\n        console.log(this.props.location.id)\n        const id = this.props.location.id\n        const url = 'https://api.themoviedb.org/3/movie/' + id + '/credits?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US'\n        $.ajax ({\n        url: url,\n        success: (searchResults) => {\n            console.log(\"Successful call to the API\");\n            console.log(searchResults);\n            var results = searchResults.cast\n            console.log(results)\n            // this.setState({results: searchResults});\n            var casts = []\n\n            results.forEach((cast) => {\n                cast.poster_src = \"https://image.tmdb.org/t/p/w185\" + cast.profile_path\n                casts.push(<CastRow key={cast.id} cast={cast}/>)\n            });\n            this.setState({castList: casts});\n        },\n        error: (xhr, status, err) => {\n            console.log(err);\n            }\n        });\n    }\n    render() {\n        return (\n            <div>\n            <h1>Details Page</h1>\n                {this.state.castList}\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Details);\n\n","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/CastRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailPage.js",["74","75"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailsRow.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":11,"column":17,"nodeType":"83","messageId":"84","endLine":11,"endColumn":23},{"ruleId":"81","severity":1,"message":"85","line":13,"column":5,"nodeType":"83","messageId":"84","endLine":13,"endColumn":11},{"ruleId":"81","severity":1,"message":"86","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"87","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":3,"column":22,"nodeType":"83","messageId":"84","endLine":3,"endColumn":26},{"ruleId":"81","severity":1,"message":"86","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"87","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"86","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"87","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":3,"column":22,"nodeType":"83","messageId":"84","endLine":3,"endColumn":26},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Select' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]