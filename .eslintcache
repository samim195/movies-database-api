[{"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/index.js":"1","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/App.js":"2","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/reportWebVitals.js":"3","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailPage.js":"4","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailsRow.js":"5","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/PeopleRow.js":"6","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/TvRow.js":"7","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/MovieRow.js":"8","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/Actors.js":"9","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/ActorRow.js":"10","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/Details.js":"11","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/CastRow.js":"12","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailPage.js":"13","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailsRow.js":"14","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/card.jsx":"15"},{"size":593,"mtime":1609798532875,"results":"16","hashOfConfig":"17"},{"size":13807,"mtime":1610134574868,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609764715753,"results":"19","hashOfConfig":"17"},{"size":1768,"mtime":1610096467603,"results":"20","hashOfConfig":"17"},{"size":1213,"mtime":1610096549571,"results":"21","hashOfConfig":"17"},{"size":1728,"mtime":1609921812761,"results":"22","hashOfConfig":"17"},{"size":1815,"mtime":1609919237767,"results":"23","hashOfConfig":"17"},{"size":1929,"mtime":1610135665221,"results":"24","hashOfConfig":"17"},{"size":1704,"mtime":1610096257484,"results":"25","hashOfConfig":"17"},{"size":1280,"mtime":1610121496309,"results":"26","hashOfConfig":"17"},{"size":1471,"mtime":1610096410491,"results":"27","hashOfConfig":"17"},{"size":1753,"mtime":1610136273572,"results":"28","hashOfConfig":"17"},{"size":1852,"mtime":1609873643639,"results":"29","hashOfConfig":"17"},{"size":1219,"mtime":1609873704816,"results":"30","hashOfConfig":"17"},{"size":358,"mtime":1610133820485,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1recvfo",{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/index.js",[],["64","65"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/App.js",["66","67","68","69","70","71","72","73","74","75"],"import './App.css';\nimport './Form.css'\nimport $ from 'jquery';\nimport { React, useState, useEffect } from 'react';\nimport MovieRow from './Home/MovieRow';\nimport PeopleRow from './Home/PeopleRow'\nimport TvRow from './Home/TvRow'\nimport Details from './Details/Details';\nimport Actors from './Actors/Actors';\nimport ShowsDetailPage from './showsDetailPage/ShowsDetailPage'\nimport { Route, Link } from 'react-router-dom';\n// import './dropdown.css'\n\nconst App = () => {\n  const [movieList, setMovieList] = useState([])\n  const [queryInput, setQuery] = useState('')\n  const [suggestedNames, setNames] = useState([])\n\n  useEffect(() => {\n    console.log(\"Hello\")\n    if(queryInput.length >= 4) {\n      checkInput()\n      // console.log(queryInput)\n      // console.log(queryInput.length)\n    }\n  }, [queryInput]);\n\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       movieList: [],\n//       query: '',\n//       suggestedNames: []\n//     }\n//   }\n\n  function searchButton() {\n    var category = $('select.category').val();\n    console.log(category)\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    if (category == 'all') {\n      console.log(\"seachring for everything\")\n      const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n      $.ajax({\n        url: url,\n        success: (searchResults) => {\n          console.log(\"Fetched data successfullu\")\n          console.log(searchResults['results'])\n          const results = searchResults['results']\n\n          var movies = []\n\n          results.forEach((movie) => {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n            // console.log(movie.name)\n            movies.push(<MovieRow key={movie.id} movie={movie}/>)\n          });\n          // this.setState({movieList: movies})\n          setMovieList(movies)\n        },\n        error: (xhr, status, err) => {\n          console.error(\"Failed to fetch data\")\n        }\n      })\n    } else if (category == 'movies') {\n      console.log(\"seachring movies\")\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";    \n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<MovieRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'people') {\n        console.log(\"seaching people\")\n        var inputValue = query.split(\" \")\n        var newQuery = ''\n        for (let i=0; i<inputValue.length; i++) {\n          newQuery += inputValue[i]\n          if (i != inputValue.length) { \n            newQuery += '%20'\n          }\n        }\n        console.log(inputValue)\n        console.log(inputValue)\n        const url = 'https://api.themoviedb.org/3/search/person?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query='+newQuery+'&page=1&include_adult=false'\n        console.log(url)\n        // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              console.log(movie.profile_path)\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.profile_path\n              // console.log(movie.name)\n              movies.push(<PeopleRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'tv shows') {\n        const url = 'https://api.themoviedb.org/3/search/tv?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&page=1&query='+query+'&include_adult=false';\n        console.log(\"seachring tv shows\")\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<TvRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      }\n  }\n  function searchButtonEnter(e){\n    e.preventDefault();\n    var category = $('select.category').val();\n    console.log(category)\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    console.log(query)\n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n\n    if (category == 'all') {\n      $.ajax({\n        url: url,\n        success: (searchResults) => {\n          console.log(\"Fetched data successfullu\")\n          console.log(searchResults['results'])\n          const results = searchResults['results']\n\n          var movies = []\n\n          results.forEach((movie) => {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n            // console.log(movie.name)\n            movies.push(<MovieRow key={movie.id} movie={movie}/>)\n          });\n          // this.setState({movieList: movies})\n          setMovieList(movies)\n        },\n        error: (xhr, status, err) => {\n          console.error(\"Failed to fetch data\")\n        }\n      })\n    } else if (category == 'movies') {\n        const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";    \n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<MovieRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'people') {\n        console.log(\"searching people\")\n        var inputValue = query.split(\" \")\n        var newQuery = ''\n        for (let i=0; i<inputValue.length; i++) {\n          newQuery += inputValue[i]\n          if (i != inputValue.length - 1) { \n            newQuery += '%20'\n          }\n        }\n        console.log(inputValue)\n        console.log(inputValue)\n        const url = 'https://api.themoviedb.org/3/search/person?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query='+newQuery+'&page=1&include_adult=false'\n        console.log(url)\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<PeopleRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      } else if (category == 'tv shows') {\n        const url = 'https://api.themoviedb.org/3/search/tv?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&page=1&query='+query+'&include_adult=false';\n        $.ajax({\n          url: url,\n          success: (searchResults) => {\n            console.log(\"Fetched data successfullu\")\n            console.log(searchResults['results'])\n            const results = searchResults['results']\n    \n            var movies = []\n    \n            results.forEach((movie) => {\n              movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n              // console.log(movie.name)\n              movies.push(<TvRow key={movie.id} movie={movie}/>)\n            });\n            // this.setState({movieList: movies})\n            setMovieList(movies)\n          },\n          error: (xhr, status, err) => {\n            console.error(\"Failed to fetch data\")\n          }\n          \n        })\n      }\n  }\n\n\n  function handleInputChange(event) {\n    event.preventDefault();\n    var value = event.target.value;\n    // console.log(value);\n    // this.setState({query: value})\n    setQuery(value)\n  }\n\n  function checkInput () {\n    // console.log(\"heloooooo\")\n    // var query = 'elite'\n    var query = $('#searchBox').val()\n    // console.log(query)\n    \n    // const url = \"https://api.themoviedb.org/3/search/movie?api_key=21d7e7d170fcdc61c66d3c6d8d994196&query=\" + query + \"&page=1\";\n    const url = \"https://api.themoviedb.org/3/search/multi?api_key=21d7e7d170fcdc61c66d3c6d8d994196&language=en-US&query=\" + query + \"&page=1&include_adult=false\"\n\n    $.ajax({\n      url: url,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfullu\")\n        console.log(searchResults['results'])\n        const results = searchResults['results']\n\n        var movies = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.profile_path\n          // console.log(movie.name)\n          if (movie.name == null) {\n            // console.log(movie.id)\n            movie.name = movie.title\n            // movies.push(movie.title)\n            // console.log(movie.name)\n          }\n          // } else {\n          //   movies.push(movie.name)\n          //   console.log(movie.name)\n          // // }\n          movies.push(movie)\n        });\n        // this.setState({suggestedNames: movies})\n        setNames(movies)\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n      \n    })\n  }\n  \n    return (\n        <div className=''>\n          <Route exact path={['/Home', '/']}>\n            <header>\n            <div className='column form-group'>\n            <form onSubmit={searchButtonEnter} >\n            <input className='form-control' id='searchBox' type=\"text\" placeholder=\"Search..\"  onChange={handleInputChange}/>\n            </form>\n            <div className='dropdown'>\n            <button className='homeButtons btn btn-primary' id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" onClick={searchButton} type=\"submit\">Search</button>\n            <select className=\"category btn btn-secondary dropdown-toggle\" aria-labelledby=\"dropdownMenuButton\">\n            <option value=\"all\">All</option>\n            <option value=\"movies\"> Movies</option>\n            <option value=\"people\"> People</option>\n            <option value=\"tv Shows\"> TV Shows</option>\n          </select>\n          </div>\n          <div className=\"column LC20lb DKV0Md\">\n          {\n            suggestedNames.map(match => {\n              return (\n                <div className=\"Matches\">\n                <Link\n                to={{\n                    pathname: \"/Details\",\n                    id: match.id // your data array of objects\n                }}\n                >\n                <button type='button'>{match.name}</button>\n                </Link>\n                </div>\n                )\n            })\n          }\n          \n          </div>\n            </div>\n            </header>\n            {movieList ? (\n            <div className='column'>\n              {movieList}\n            </div>\n            ) : (\n              <p>No suggestions found</p>\n            )\n            }\n            \n          </Route>\n          <Route path='/Details' component={Details}/>\n          <Route path='/Actors' component={Actors}/>\n          <Route path='/ShowsDetail' component={ShowsDetailPage}/>\n        </div>\n        \n    );\n}\n\nexport default App;\n","/Users/samim/Desktop/JavaScriptProjects/movie-search/src/reportWebVitals.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailPage.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/showsDetailPage/ShowsDetailsRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/PeopleRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/TvRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/MovieRow.js",["76"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/Actors.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Actors/ActorRow.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/Details.js",[],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Details/CastRow.js",["77"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailPage.js",["78","79"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/ShowsDetailPage/ShowsDetailsRow.js",["80"],"/Users/samim/Desktop/JavaScriptProjects/movie-search/src/Home/card.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":48,"column":18,"nodeType":"87","messageId":"88","endLine":48,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":72,"column":25,"nodeType":"87","messageId":"88","endLine":72,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":97,"column":27,"nodeType":"87","messageId":"88","endLine":97,"endColumn":29},{"ruleId":"85","severity":1,"message":"89","line":103,"column":17,"nodeType":"87","messageId":"88","endLine":103,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":135,"column":27,"nodeType":"87","messageId":"88","endLine":135,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":173,"column":18,"nodeType":"87","messageId":"88","endLine":173,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":195,"column":25,"nodeType":"87","messageId":"88","endLine":195,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":219,"column":27,"nodeType":"87","messageId":"88","endLine":219,"endColumn":29},{"ruleId":"85","severity":1,"message":"89","line":225,"column":17,"nodeType":"87","messageId":"88","endLine":225,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":255,"column":27,"nodeType":"87","messageId":"88","endLine":255,"endColumn":29},{"ruleId":"90","severity":1,"message":"91","line":15,"column":17,"nodeType":"92","endLine":15,"endColumn":131},{"ruleId":"90","severity":1,"message":"91","line":15,"column":17,"nodeType":"92","endLine":15,"endColumn":190},{"ruleId":"93","severity":1,"message":"94","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":3,"column":22,"nodeType":"95","messageId":"96","endLine":3,"endColumn":26},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]